# -*- coding: utf-8 -*-
"""palindrome with extras

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TVx_-_1wILSur0VQhHwEJbeiGflVrte8
"""

def pal(a):
  i = 0
  j = len(a)-1
  t = True
  while i < j:
    if a[i] != a[j]:
      t = False
      return t
    i+=1
    j-=1
  return t


pal('abcba')

def find_pal(a):
  n = len(a)
  t = False
  for i in range(n):
    for j in range(i+1,n+1):
      if len(a[i:j])>=2:
        if pal(a[i:j]):
          t = True

  return t



find_pal('abcc')

def find_pal(a):
  n = len(a)
  t = False
  size = []
  for i in range(n):
    for j in range(i+1,n+1):
      if len(a[i:j])>=2:
        if pal(a[i:j]):
          size.append(len(a[i:j]))
  size.sort()
  return size[-1]

find_pal('aabbaa')

def pos(a):
  n = len(a)
  k = {}
  count = 0
  for i in range(n):
    for j in range(n):
      if a[i] == a[j]:
        count+=1
    k[a[i]] = count
    count = 0

  val = k.values()
  count2 = 0
  t = True

  for i in val:
    if i % 2 != 0:
      count2 += 1
      if count2 > 1:
        t = False
        return t
  return t





pos('aabgb')

